from random import *
import csv

#---------------------------------------------------------VARIABLES----------------------------------------------------------#

#_______________________BSN System____________________#


BATTERY_LEVEL=[]

#___________________Sensors Module____________________#

SPO2=[] # blood oxidation and blood oxidation curve (Oximeter)
SPO2_context=[]
spo2_data=[]
spo2_context=[]
EKG=[] # heart rate / electrocardiogram curve
EKG_context=[]
ekg_data=[]
ekg_context=[]
TEMP=[] # temperature
TEMP_context=[]
temp_data=[]
temp_context=[]
ACC=[] # accelerometer
ACC_context=[]
fall_data=[]
fall_context=[]
pos_data=[]
pos_context=[]
t = 0

#SensorInformation
Oxygenation=[] # 100 > normal > 94 > moderate > 90 > high > 0 ;
Oxygenation_Risk=[] # 100 > normal > 94 > moderate > 90 > high > 0 ;

PulseRate=[] # high > 120 > normal > 80 > high > 0 ;
PulseRate_Risk=[] # high > 120 > normal > 80 > high > 0 ;

Temperature=[] # 50 > high > 38 > moderate > 37 > normal > 35 > moderate > 30 > high ;
Temperature_Risk=[] # 50 > high > 38 > moderate > 37 > normal > 35 > moderate > 30 > high ;

Position=[] # STANDING | LAYING
Fall=[] # yes | no


#_________________Data Transfer Module_____________________#


BLUETOOTH=[]
BLUETOOTH_SIGNAL_LVL=[]

WIFI=[]
WIFI_SIGNAL_LVL=[]

USB=[]


#___________________Database Module_____________________#


DISK_SPACE=[]
Disk_Availability = []
PERSISTENCE = []

#_________________Processing Module_____________________#


#normal state ( . . 0 . 1 ) label : "Normal" ;
#moderate state ( 0 . 5 . . 0 . 6 ) label : "Moderate Risk " ;
#high state ( 0 . 8 . . ) label : "High Risk " ;

PATIENT_STATE=[]
STATUS=[]
RELIABILITY=[]
QUALITY=[]

#------------------------------------------------------MAIN-----------------------------------------------------------#



#---------------------------------INPUT--------------------------------#

while(t<1):
    t = int(input("Enter the amount of records to be simulated (positive integer): "))


#----------------------------FILE MANAGEMENT---------------------------#

csvfile = open("Sensor_Data.csv", "w")
csvfile2 = open("Processed_Data.csv", "w")
csvfile3 = open("Quality_Constraint.csv", "w")
try:
    writer = csv.writer(csvfile)
    writer.writerow(["OXYGENATION", "OXYGENATION_RISK", "PULSE_RATE", "PULSE_RATE_RISK", "TEMPERATURE", "TEMPERATURE_RISK", "ACC", "POSITION", "FALL", "BLUETOOTH", "WIFI", "USB", "DISK_SPACE", "DISK_AVAILABILITY", "PATIENT_STATE"])

    writer2 = csv.writer(csvfile2)
    writer2.writerow(["BATTERY_LEVEL", "RELIABILITY", "SPO2", "SPO2_DATA", "EKG" , "EKG_DATA" , "TEMP", "TEMP_DATA", "ACC", "FALL_DATA", "POS_DATA", "BLUETOOTH", "WIFI", "USB", "DISK_SPACE", "DISK_AVAILABILITY", "PERSISTENCE", "PATIENT_STATE", "STATUS"])

    writer3 = csv.writer(csvfile3)
    writer3.writerow(["SPO2", "TEMP", "EKG", "ACC", "POS_DATA", "SPO2_DATA", "FALL_DATA", "EKG_DATA", "TEMP_DATA", "RELIABILITY", "PATIENT_STATE", "QUALITY_GOAL"])

#-------------------------------------------------- BSN MODULES -------------------------------------------------------#
    BATTERY=100
    DISK=4
    for i in range(t):
        RELIABILITY.append(1)
        fSSPO2 = 0;
        fSTemp = 0;
        fSECG = 0;
        fSACC = 0;
        fPos  = 0;
        fOxy = 0;
        fFall  = 0;
        fPlsRt = 0;
        fTemp = 0;
        fMem = 1;

        # BATTERY LEVEL
        temp = BATTERY-(Random().uniform(0.3, 0.6))
        if(temp>1):
            BATTERY_LEVEL.append(temp)
            BATTERY=BATTERY_LEVEL[i]
        else:
            BATTERY_LEVEL.append(0)
            BATTERY=100
        

#-------------------------------------------------------------------------------------------------------------------#

#Oxygenation = 100 > normal > 94 > moderate > 90 > high > 0 ;
#fator de confiabilidade: 0.994593644
        random=(Random().randint(0, 1000))
        temp = int(Random().gauss(97,3))

        #Oxygenation
        if (random<100):
            Oxygenation.append(-1)
        elif (temp>100):
            Oxygenation.append(temp)
        else:
            Oxygenation.append(temp)

        if(Oxygenation[i]<=100 and Oxygenation[i]>94):
            Oxygenation_Risk.append("low")
        elif(Oxygenation[i]<=94 and Oxygenation[i]>90):
            Oxygenation_Risk.append("normal")
        elif(Oxygenation[i]<=90 and Oxygenation[i]>0):
            Oxygenation_Risk.append("high")
        else:
            Oxygenation_Risk.append("Unknown")

        
        if(Oxygenation[i]>=100):
            SPO2.append("Available")
            fSSPO2=1;#
            spo2_data.append("Unavailable")
            fOxy=0;#
            SPO2_context.append("C1")
            spo2_context.append("!C2")

        elif(Oxygenation[i]==-1):
            SPO2.append("Unavailable")
            fSSPO2=0;#
            spo2_data.append("Unavailable")
            fOxy=0;#
            SPO2_context.append("!C1")
            spo2_context.append("!C2")
        else:
            SPO2.append("Available")
            fSSPO2=1;#
            spo2_data.append("Available")
            fOxy=1;#
            SPO2_context.append("C1")
            spo2_context.append("C2")


#---------------------------------------------------------------------------------------------#

#PulseRate = high > 120 > normal > 80 > high > 0 ;

        random=(Random().randint(0, 1000))
        temp = int(Random().gauss(100,10))

        #PulseRate
        if (random<50):
            PulseRate.append(0)
        elif (random>=50 and random<75):
            PulseRate.append(Random().randint(200,300))
        elif (random>=75 and random<100):
            PulseRate.append(Random().randint(-50,-1))
        else:
            PulseRate.append(temp)

        if(PulseRate[i]<=120 and PulseRate[i]>80):
            PulseRate_Risk.append("low")
        elif((PulseRate[i]<=80 and PulseRate[i]>0) or (PulseRate[i]>120)):
            PulseRate_Risk.append("high")
        else:
            PulseRate_Risk.append("Unknown")
        
        if(PulseRate[i]>=200 or PulseRate[i]<0):
            EKG.append("Available")
            fSECG = 1;#
            ekg_data.append("Unavailable")
            fPlsRt = 0;#
            EKG_context.append("C3")
            ekg_context.append("!C4")
        elif(PulseRate[i]==0):
            EKG.append("Unavailable")
            fSECG = 0;#
            ekg_data.append("Unavailable")
            fPlsRt = 0;#
            EKG_context.append("!C3")
            ekg_context.append("!C4")
        else:
            EKG.append("Available")
            fSECG = 1;#
            ekg_data.append("Available")
            fPlsRt = 1;#
            EKG_context.append("C3")
            ekg_context.append("C4")

#---------------------------------------------------------------------------------------------#

#Temperature = 50 > high > 38 > moderate > 37 > normal > 35 > moderate > 30 > high ;

        random=(Random().randint(0, 1000))
        temp = int(Random().gauss(36,0.8))

        #Temperature
        if (random<50):
            Temperature.append(0)
        elif (random>=50 and random<75):
            Temperature.append(Random().randint(50,60))
        elif (random>=75 and random<100):
            Temperature.append(Random().randint(70,80))
        else:
            Temperature.append(temp)

        if(Temperature[i]<=37 and Temperature[i]>=35):
            Temperature_Risk.append("low")
        elif((Temperature[i]<35 and Temperature[i]>30) or (Temperature[i]==38)):
            Temperature_Risk.append("normal")
        elif((Temperature[i]<=50 and Temperature[i]>38) or (Temperature[i]<=30 and Temperature[i]>0)):
            Temperature_Risk.append("high")
        else:
            Temperature_Risk.append("Unknown")

        if(Temperature[i]>50 or Temperature[i]<0):
            TEMP.append("Available")
            fSTemp = 1;#
            temp_data.append("Unavailable")
            fTemp = 0;#
            TEMP_context.append("C5")
            temp_context.append("!C6")
        elif(Temperature[i]==0):
            TEMP.append("Unavailable")
            fSTemp = 0;#
            temp_data.append("Unavailable")
            fTemp = 0;#
            TEMP_context.append("!C5")
            temp_context.append("!C6")
        else:
            TEMP.append("Available")
            fSTemp = 1;#
            temp_data.append("Available")
            fTemp = 1;#
            TEMP_context.append("C5")
            temp_context.append("C6")            
#---------------------------------------------------------------------------------------------#

#Position = STANDING | LAYING 

        random=(Random().randint(0, 1000))

        #Position
        if(random<50):
            Position.append("ERROR")
            ACC.append("Unavailable")
            fSACC = 0;#
            pos_data.append("Unavailable")
            fPos  = 0;#
            ACC_context.append("!C7")
            pos_context.append("!C8")
        elif(random>=50 and random<800):
            Position.append("STANDING")
            ACC.append("Available")
            fSACC = 1;#
            pos_data.append("Available")
            fPos  = 1;#
            ACC_context.append("C7")
            pos_context.append("C8")
        elif(random>=800 and random<=1000):
            Position.append("LAYING")
            ACC.append("Available")
            fSACC = 1;#
            pos_data.append("Available")
            fPos  = 1;#
            ACC_context.append("C7")
            pos_context.append("C8")
        else:
            ACC.append("Available")
            fSACC = 1;#
            pos_data.append("Available")
            fPos  = 1;#
            ACC_context.append("C7")
            pos_context.append("C8")

#---------------------------------------------------------------------------------------------#
             
#Fall = yes | no

        random=(Random().randint(0, 100))

        #Fall
        if (ACC[i]=="Unavailable"):
            fSACC = 0;#
            Fall.append("no")
            fall_data.append("Unavailable")
            fFall  = 0;#
            fall_context.append("!C8.1")
        else:
            fSACC = 1;#
            if (random>5):
                if (random==7 and Position[i]=="LAYING"):
                    Fall.append("yes")
                    fall_data.append("Available")
                    fFall  = 1;#
                    fall_context.append("C8.1")
                else:
                    Fall.append("no")
                    fall_data.append("Available")
                    fFall  = 1;#
                    fall_context.append("C8.1")
            else:
                Fall.append("no")
                fall_data.append("Unavailable")
                fFall  = 0;#
                fall_context.append("!C8.1")            

#---------------------------------------------------------------------------------------------#

        #BLUETOOTH

        BLUETOOTH_SIGNAL_LVL.append(Random().randint(0, 100))
        
        if (BLUETOOTH_SIGNAL_LVL[i]>=40):
            BLUETOOTH.append("Strong")
        elif (BLUETOOTH_SIGNAL_LVL[i]>10):
            BLUETOOTH.append("Average")
        elif (BLUETOOTH_SIGNAL_LVL[i]>0):
            BLUETOOTH.append("Weak")
        else:
            BLUETOOTH.append("Unavailable")

#---------------------------------------------------------------------------------------------#

        #WIFI

        WIFI_SIGNAL_LVL.append(Random().randint(0, 100))
        
        if (WIFI_SIGNAL_LVL[i]>=40):
            WIFI.append("Strong")
        elif (WIFI_SIGNAL_LVL[i]>10):
            WIFI.append("Average")
        elif (WIFI_SIGNAL_LVL[i]>0):
            WIFI.append("Weak")
        else:
            WIFI.append("Unavailable")
             

#---------------------------------------------------------------------------------------------#

        #USB
        random=(Random().randint(0, 100))
        
        if (random<=99):
            USB.append("OK")
        else:
            USB.append("Unavailable")

#---------------------------------------------------------------------------------------------#

        random=(Random().randint(0, 1000))
        #Disponibilidade de armazenamento
        if (random<10):
            Disk_Availability.append("Unavailable")
        else:
            Disk_Availability.append("Available")

         

        #Espaço de armazenamento
        temp = DISK-(Random().uniform(0.03, 0.06))
        if(Disk_Availability[i]=="Available"):
            if(temp>0.1):   
                DISK_SPACE.append(temp)
                DISK=DISK_SPACE[i]
            else:
                DISK_SPACE.append(0)
                DISK=4
        else:
            DISK_SPACE.append(temp)
            DISK=DISK_SPACE[i]

        #PERSISTENCE
        if (Disk_Availability[i] == "Available" and DISK_SPACE[i] > 0.1):
            PERSISTENCE.append("Stored")          
        else:
            PERSISTENCE.append("Failure")    
            
############################################### Processing Module ########################################

        #PARAMETRIC FORMULA
        RELIABILITY[i]=1* (-997002999*fSACC*fSECG*fSSPO2*fSTemp +997002999*fSACC*fSECG*fSSPO2 +997002999*fSACC*fSECG*fSTemp -997002999*fSACC*fSECG +997002999*fSACC*fSSPO2*fSTemp -997002999*fSACC*fSSPO2 -997002999*fSACC*fSTemp +997002999*fSACC +997002999*fSECG*fSSPO2*fSTemp -997002999*fSECG*fSSPO2 -997002999*fSECG*fSTemp +997002999*fSECG -997002999*fSSPO2*fSTemp +997002999*fSSPO2 +997002999*fSTemp) / (1000000000)*0.49750499500249950000*0.99202794406994402799* (-30821662353087221526296230921303649840716680429504042095345479233093574281861902466101977160695554695039680476025984955001*fFall*fMem**5*fOxy*fPlsRt*fPos*fTemp -541814003311535484160979861991824374610625303389030698182084057195403840904057639843311892462439479640619119494785005000000*fFall*fMem**4*fOxy*fPlsRt*fPos*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPlsRt*fPos +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPlsRt*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPos*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fPlsRt*fPos*fTemp -3809819351357188478377278817259194770031756936955281565246037760329056274545589651530743089100070394578169590010000000000000*fFall*fMem**3*fOxy*fPlsRt*fPos*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt*fPos +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPos*fTemp -13394562895442502139767357649164718983082600629925524581130281853398238952255739314455678289109357389610010000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fPos*fTemp +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fPos +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fTemp -23546302148952480717999237718705837578918150135268231928226813640382738053857179973567211328324815005000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fPos*fTemp +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fPos +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem -16556817843706071698527629278181402123656766459720589443459967433958957107835420353455594965001000000000000000000000000000000*fFall*fOxy*fPlsRt*fPos*fTemp +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt*fPos +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fMem**4*fOxy*fPlsRt*fPos*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fPlsRt*fPos*fTemp +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPos*fTemp +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPos*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPos -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fTemp +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPos*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPos -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fTemp +1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) / (1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) +1* (-997002999*fSACC*fSECG*fSSPO2*fSTemp +997002999*fSACC*fSECG*fSSPO2 +997002999*fSACC*fSECG*fSTemp -997002999*fSACC*fSECG +997002999*fSACC*fSSPO2*fSTemp -997002999*fSACC*fSSPO2 -997002999*fSACC*fSTemp +997002999*fSACC +997002999*fSECG*fSSPO2*fSTemp -997002999*fSECG*fSSPO2 -997002999*fSECG*fSTemp +997002999*fSECG -997002999*fSSPO2*fSTemp +997002999*fSSPO2 +997002999*fSTemp) / (1000000000)*0.49750499500249950000* (-30821662353087221526296230921303649840716680429504042095345479233093574281861902466101977160695554695039680476025984955001*fFall*fMem**5*fOxy*fPlsRt*fPos*fTemp -541814003311535484160979861991824374610625303389030698182084057195403840904057639843311892462439479640619119494785005000000*fFall*fMem**4*fOxy*fPlsRt*fPos*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPlsRt*fPos +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPlsRt*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fOxy*fPos*fTemp +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fFall*fMem**4*fPlsRt*fPos*fTemp -3809819351357188478377278817259194770031756936955281565246037760329056274545589651530743089100070394578169590010000000000000*fFall*fMem**3*fOxy*fPlsRt*fPos*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt*fPos +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fPlsRt +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fOxy*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fOxy*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fFall*fMem**3*fPos*fTemp -13394562895442502139767357649164718983082600629925524581130281853398238952255739314455678289109357389610010000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fPos*fTemp +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fPos +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPlsRt +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fOxy +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPlsRt -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem**2*fTemp -23546302148952480717999237718705837578918150135268231928226813640382738053857179973567211328324815005000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fPos*fTemp +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fPos +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPlsRt +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fOxy +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPlsRt -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fMem -16556817843706071698527629278181402123656766459720589443459967433958957107835420353455594965001000000000000000000000000000000*fFall*fOxy*fPlsRt*fPos*fTemp +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt*fPos +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fPlsRt +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fOxy*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fOxy +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPlsRt -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fFall +15526903247429301357110450560344162694190099262530753661069873156158227482468906808659996625964001000000000000000000000000000*fMem**4*fOxy*fPlsRt*fPos*fTemp +218357946074323959597846103919829890858738186872443222453845911730606396258315540450231864004000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fPos -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPlsRt*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fOxy*fPos*fTemp -7821924777878911833876675413095596639393073372396326744117650150347973001000000000000000000000000000000000000000000000000000000*fMem**3*fPlsRt*fPos*fTemp +1151554301926516670381592926022973999983673553461081347338784550401400506516602963808006000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fPos*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fPos -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPlsRt -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fOxy*fTemp -82500969525021772441436208138785583120078700285651209428238893925003000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fPos*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fPos +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPlsRt*fTemp +3940419171538644993286719563007540820216150982001000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem**2*fPos*fTemp +2699089747160383023047107273949795882285765961814172480716224643188091873735880004000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fPos*fTemp -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fPos -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPlsRt -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fOxy -290056909087888213825962900746351291379866789068929750755931003000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fPos*fTemp +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fPos +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPlsRt +27707451487840073697140005995456908237968002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPos*fTemp -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fPos -1985048909104923034991001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fMem*fTemp +2372364936798431506215709992330291214921870887046837340641740471724377972001000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fPos*fTemp -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fPos -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPlsRt -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fOxy -339927360829792806574638330546331777243656983670209979001000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fPos*fTemp +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fPos +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPlsRt +48706929042985573000999000636090986001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPos*fTemp -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fPos -6979034965020993001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000*fTemp +1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) / (1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)

        #SATISFACTION EVALUATION
        if(Disk_Availability[i] != "Unavailable" and DISK_SPACE[i]>0 and BATTERY_LEVEL[i]!=0):
            if(BLUETOOTH[i]!="Unavailable" or WIFI[i]!="Unavailable" or USB[i]=="OK"):
                if (spo2_data[i]=="Available" or ekg_data[i]=="Available" or temp_data[i]=="Available" or pos_data[i]=="Available"or fall_data[i]=="Available"):
                    if (Oxygenation_Risk[i]=="high" or PulseRate_Risk[i]=="high" or Temperature_Risk[i]=="high" or Fall[i]=="yes"):
                        PATIENT_STATE.append("High Risk")
                        STATUS.append("IDENTIFIED")
                        if (RELIABILITY[i]>=0.97):
                            QUALITY.append("Reliability >= 97%")
                        else:
                            QUALITY.append("Reliability < 97%")
                    elif(Oxygenation_Risk[i]=="normal" or Temperature_Risk[i]=="normal"):
                        PATIENT_STATE.append("Normal Risk")
                        STATUS.append("IDENTIFIED")
                        if (RELIABILITY[i]>=0.96):
                            QUALITY.append("Reliability >= 96%")
                        else:
                            QUALITY.append("Reliability < 96%")
                    elif(Oxygenation_Risk[i]=="low" or PulseRate_Risk[i]=="low" or Temperature_Risk[i]=="low"):
                        PATIENT_STATE.append("Low Risk")
                        STATUS.append("IDENTIFIED")
                        if (RELIABILITY[i]>=0.95):
                            QUALITY.append("Reliability >= 95%")
                        else:
                            QUALITY.append("Reliability < 95%")
                    else:
                        PATIENT_STATE.append("Unmapped")
                        STATUS.append("NON-IDENTIFIED")
                        QUALITY.append("NON-IDENTIFIED")
                else:
                    PATIENT_STATE.append("Unmapped")
                    STATUS.append("NON-IDENTIFIED")
                    QUALITY.append("NON-IDENTIFIED")
            else:
                PATIENT_STATE.append("Unmapped")
                STATUS.append("NON-IDENTIFIED")
                QUALITY.append("NON-IDENTIFIED")
        else:
            PATIENT_STATE.append("Unmapped")
            STATUS.append("NON-IDENTIFIED")
            QUALITY.append("NON-IDENTIFIED")


#-------------------------------------------DATASET OUTPUT-------------------------------------------------------------#


        #Sensor_Data.csv
        writer.writerow([Oxygenation[i], Oxygenation_Risk[i], PulseRate[i], PulseRate_Risk[i], Temperature[i], Temperature_Risk[i], ACC[i], Position[i], Fall[i], BLUETOOTH[i], WIFI[i], USB[i], "{0:.2f}".format(DISK_SPACE[i]), Disk_Availability[i], PATIENT_STATE[i]])
        
        #Processed_Data.csv
        writer2.writerow(["{0:.2f}".format(BATTERY_LEVEL[i]), "{0:.5f}".format(RELIABILITY[i]), SPO2[i], spo2_data[i], EKG[i], ekg_data[i], TEMP[i], temp_data[i], ACC[i], fall_data[i], pos_data[i], BLUETOOTH[i], WIFI[i], USB[i], "{0:.2f}".format(DISK_SPACE[i]), Disk_Availability[i], PERSISTENCE[i], PATIENT_STATE[i], STATUS[i]])
        
        #Quality_Constraint.csv
        writer3.writerow([SPO2_context[i], TEMP_context[i], EKG_context[i], ACC_context[i], pos_context[i], spo2_context[i], fall_context[i], ekg_context[i], temp_context[i], RELIABILITY[i], PATIENT_STATE[i], QUALITY[i]])

#-------------------------------------------CONSOLE OUTPUT-------------------------------------------------------------#

    #Sensor_Data.csv
    #print(Oxygenation[i], Oxygenation_Risk[i], "\t|", PulseRate[i], PulseRate_Risk[i],"\t|", Temperature[i], Temperature_Risk[i],"\t|", Position[i], Fall[i],"\t|", PATIENT_STATE[i],"\t|", STATUS[i])

    #Processed_Data.csv
    #print("{0:.2f}".format(BATTERY_LEVEL[i]), "{0:.5f}".format(RELIABILITY[i]), SPO2[i], EKG[i] ,TEMP[i], ACC[i], BLUETOOTH[i], WIFI[i], USB[i], "{0:.2f}".format(DISK_SPACE[i]), PERSISTENCE[i], PATIENT_STATE[i], STATUS[i] + "\n\n")

    #Quality_Constraint.csv            
    #writer3.writerow([SPO2[i], spo2_data[i], EKG[i] , ekg_data[i] , TEMP[i], temp_data[i], ACC[i], fall_data[i], pos_data[i], RELIABILITY[i] , PATIENT_STATE[i], QUALITY[i]])
        

finally:
    csvfile.close()
    csvfile2.close()
    csvfile3.close()
